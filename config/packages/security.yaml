security:
    encoders:
        App\Entity\User:
            algorithm: bcrypt
    # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers
    providers:
        # used to reload user from session & other features (e.g. switch_user)
        app_user_provider:
            entity:
                class: App\Entity\User
                property: email
    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        main:
            anonymous: true
            
            form_login:
                login_path: app_login
                check_path: app_login
                provider: app_user_provider

            logout:
                path: logout
            

            remember_me:
                secret:   '%kernel.secret%'
                lifetime: 604800 # 1 week in seconds
                path:     /
                token_provider: 'Symfony\Bridge\Doctrine\Security\RememberMe\DoctrineTokenProvider'
            oauth:
                resource_owners:
                    facebook:           "/login/check-facebook"

                login_path:        /zaloguj-sie
                use_forward:       false
                failure_path:      /zaloguj-sie

                oauth_user_provider:
                    service: my.oauth_aware.user_provider.service

            
            # remember_me:
            #     secret:   '%kernel.secret%'
            #     lifetime: 2592000 # 30 days in seconds

            guard:
                authenticators:
                    - App\Security\LoginFormAuthenticator
                
            

            # activate different ways to authenticate

            # http_basic: true
            # https://symfony.com/doc/current/security.html#a-configuring-how-your-users-will-authenticate

            # form_login: true
            # https://symfony.com/doc/current/security/form_login_setup.html

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
          - { path: ^/login$, roles: IS_AUTHENTICATED_ANONYMOUSLY }
          - { path: ^/connect$, roles: IS_AUTHENTICATED_ANONYMOUSLY }
          - { path: ^/admin, roles: [ROLE_ADMIN, ROLE_EDITOR] }
          - { path: ^/editor, roles: ROLE_EDITOR }
      
